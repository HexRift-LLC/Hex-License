<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Hex License - Staff Administration Panel">
    <title>Hex License - Staff Dashboard</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600;700;800&display=swap" rel="stylesheet">

</head>

<body class="dark-theme">
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="nav-content">
            <div class="logo">Hex License</div>

            <div class="burger" onclick="toggleMenu()" aria-label="Toggle menu">
                <span class="burger-line"></span>
                <span class="burger-line"></span>
                <span class="burger-line"></span>
            </div>

            <div class="nav-menu">
                <div class="nav-links">
                    <a href="/dash">
                        <i class="fas fa-home" aria-hidden="true"></i>
                        <span>Dashboard</span>
                    </a>
                    <% if (user && user.isStaff) { %>
                        <a href="/staff" class="active">
                            <i class="fas fa-shield-alt" aria-hidden="true"></i>
                            <span>Staff Panel</span>
                        </a>
                        <% } %>
                            <a href="/auth/logout" class="logout-btn">
                                <i class="fas fa-sign-out-alt" aria-hidden="true"></i>
                                <span>Logout</span>
                            </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Staff Navigation Tabs -->
    <div class="staff-nav">
        <button class="staff-nav-btn active hover-glow" onclick="showSection('products', event)"
            aria-controls="products-section">
            <i class="fas fa-box" aria-hidden="true"></i> Products Management
        </button>
        <button class="staff-nav-btn hover-glow" onclick="showSection('generation', event)"
            aria-controls="generation-section">
            <i class="fas fa-key" aria-hidden="true"></i> License Generator
        </button>
        <button class="staff-nav-btn hover-glow" onclick="showSection('licenses', event)"
            aria-controls="licenses-section">
            <i class="fas fa-list" aria-hidden="true"></i> License Management
        </button>
        <button class="staff-nav-btn hover-glow" onclick="showSection('users', event)" aria-controls="users-section">
            <i class="fas fa-users" aria-hidden="true"></i> User Management
        </button>
    </div>

    <main class="container">
        <!-- Products Management Section -->
        <section id="products-section" class="staff-section active content-fade">
            <div class="card action-card interactive-card">
                <h2 class="text-center">Products Management</h2>
                <form id="productForm" class="staff-form" autocomplete="off">
                    <div class="form-control">
                        <div class="input-group">
                            <label for="productName">Product Name</label>
                            <input type="text" id="productName" name="productName" class="styled-input"
                                placeholder="Enter product name" required>
                        </div>
                    </div>
                    <button type="submit" class="action-button">
                        <i class="fas fa-plus" aria-hidden="true"></i> Add Product
                    </button>
                </form>

                <div class="products-list">
                    <h2 class="text-center">Existing Products</h2>
                    <% if (products.length===0) { %>
                        <div class="text-center" style="padding: 2rem;">
                            <i class="fas fa-info-circle"
                                style="font-size: 2rem; color: var(--accent-primary); margin-bottom: 1rem;"
                                aria-hidden="true"></i>
                            <p>No products have been added yet.</p>
                        </div>
                        <% } else { %>
                            <% products.forEach(product=> { %>
                                <div class="product-item interactive-element">
                                    <span>
                                        <%= product.name %>
                                    </span>
                                    <button class="delete-btn" onclick="deleteProduct('<%= product._id %>')"
                                        aria-label="Delete <%= product.name %>">
                                        <i class="fas fa-trash" aria-hidden="true"></i> Delete
                                    </button>
                                </div>
                                <% }) %>
                                    <% } %>
                </div>
            </div>
        </section>

        <!-- Key Generation Section -->
        <section id="generation-section" class="staff-section content-fade">
            <div class="card action-card interactive-card">
                <h2 class="text-center">License Generator</h2>
                <form id="generateForm" class="staff-form" autocomplete="off">
                    <div class="form-control">
                        <label for="duration">Duration (days)</label>
                        <input type="number" id="duration" name="duration" min="1" required class="input-field">
                    </div>
                    <div class="form-control">
                        <label for="quantity">Quantity</label>
                        <input type="number" id="quantity" name="quantity" min="1" max="100" required
                            class="input-field">
                    </div>
                    <div class="form-control">
                        <label for="product">Product</label>
                        <select id="product" name="product" class="product-select custom-select">
                            <option value="">Select Product</option>
                            <% products.forEach(product=> { %>
                                <option value="<%= product.name %>">
                                    <%= product.name %>
                                </option>
                                <% }) %>
                        </select>
                        <div class="or-divider">OR</div>
                        <input type="text" id="newProduct" name="newProduct" placeholder="Enter new product name"
                            class="product-input input-field">
                    </div>
                    <div class="form-control">
                        <label for="userId">Assign to User</label>
                        <select id="userId" name="userId" class="user-select custom-select">
                            <option value="">Select Registered User</option>
                            <% users.forEach(user=> { %>
                                <option value="<%= user._id %>">
                                    <%= user.username %> (<%= user.discordId %>)
                                </option>
                                <% }) %>
                        </select>
                        <div class="or-divider">OR</div>
                        <select id="discordId" name="discordId" class="discord-members-select custom-select">
                            <option value="">Select Discord Member</option>
                        </select>
                    </div>
                    <button type="submit" class="action-button">
                        <i class="fas fa-key" aria-hidden="true"></i> Generate Keys
                    </button>
                </form>
            </div>
        </section>

        <!-- License Management Section -->
        <section id="licenses-section" class="staff-section content-fade">
            <div class="card action-card interactive-card">
                <h2 class="text-center">License Management</h2>
                <div class="license-cards">
                    <% if (licenses.length===0) { %>
                        <div class="text-center" style="grid-column: 1/-1; padding: 2rem;">
                            <i class="fas fa-info-circle"
                                style="font-size: 2rem; color: var(--accent-primary); margin-bottom: 1rem;"
                                aria-hidden="true"></i>
                            <p>No licenses have been generated yet.</p>
                        </div>
                        <% } else { %>
                            <% licenses.forEach(license=> { %>
                                <div
                                    class="license-card interactive-card <%= license.isActive ? 'active' : 'inactive' %>">
                                    <div class="license-header">
                                        <span class="status-badge <%= license.isActive ? 'active' : 'inactive' %>">
                                            <%= license.isActive ? 'Active' : 'Inactive' %>
                                        </span>
                                        <span class="product-badge">
                                            <%= license.product %>
                                        </span>
                                    </div>
                                    <div class="license-body">
                                        <div class="key-section">
                                            <label>License Key:</label>
                                            <div class="key-container">
                                                <code
                                                    class="key-text"><%= license.key.substring(0, license.key.length / 3) %>...</code>
                                                <button class="copy-btn" onclick="copyKey('<%= license.key %>')"
                                                    aria-label="Copy license key">
                                                    <i class="fas fa-copy" aria-hidden="true"></i> Copy
                                                </button>
                                            </div>
                                        </div>
                                        <div class="details">
                                            <p>Expires: <%= license.expiresAt.toLocaleDateString() %>
                                            </p>
                                            <p>HWID: <%= license.hwid ? license.hwid.substring(0, license.hwid.length /
                                                    4) + '...' : 'Not bound' %>
                                            </p>
                                            <p>User: <%= license.user ? license.user.username : (license.discordId ?
                                                    license.discordUsername : 'Unassigned' ) %>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="user-actions">
                                        <button onclick="toggleLicense('<%= license._id %>', this)"
                                            class="toggle-btn <%= license.isActive ? 'active' : 'inactive' %>"
                                            aria-label="<%= license.isActive ? 'Deactivate Key' : 'Activate Key' %>">
                                            <i class="fas fa-power-off" aria-hidden="true"></i>
                                            <%= license.isActive ? 'Deactivate Key' : 'Activate Key' %>
                                        </button>
                                        <button onclick="resetHWID('<%= license._id %>')" class="reset-hwid-btn"
                                            aria-label="Reset HWID">
                                            <i class="fas fa-redo" aria-hidden="true"></i> Reset HWID
                                        </button>
                                        <button onclick="deleteLicense('<%= license._id %>')" class="delete-btn"
                                            aria-label="Delete License">
                                            <i class="fas fa-trash" aria-hidden="true"></i> Delete
                                        </button>
                                    </div>
                                </div>
                                <% }) %>
                                    <% } %>
                </div>
            </div>
        </section>

        <!-- User Management Section -->
        <section id="users-section" class="staff-section content-fade">
            <div class="card action-card interactive-card">
                <h2 class="text-center">User Management</h2>
                <div class="license-cards">
                    <% if (users.length===0) { %>
                        <div class="text-center" style="grid-column: 1/-1; padding: 2rem;">
                            <i class="fas fa-info-circle"
                                style="font-size: 2rem; color: var(--accent-primary); margin-bottom: 1rem;"
                                aria-hidden="true"></i>
                            <p>No users have registered yet.</p>
                        </div>
                        <% } else { %>
                            <% users.forEach(user=> { %>
                                <div class="user-card interactive-card">
                                    <div class="user-header">
                                        <span class="status-badge <%= user.isBanned ? 'inactive' : 'active' %>">
                                            <%= user.isBanned ? 'Banned' : 'Active' %>
                                        </span>
                                        <span class="user-status <%= user.isStaff ? 'staff' : '' %>">
                                            <%= user.isStaff ? 'Staff' : 'User' %>
                                        </span>
                                    </div>
                                    <div class="user-body">
                                        <div class="user-info">
                                            <p>Discord ID: <%= user.discordId.substring(0,
                                                    Math.floor(user.discordId.length / 1.2)) %>...</p>
                                            <p>Username: <%= user.username.substring(0, Math.floor(user.username.length
                                                    / 1.3)) %>...</p>
                                            <p>Active Licenses: <%= user.activeLicenses %>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="user-actions">
                                        <button onclick="toggleBan('<%= user._id %>', this)"
                                            class="action-button <%= user.isBanned ? 'success' : 'danger' %>"
                                            aria-label="<%= user.isBanned ? 'Unban User' : 'Ban User' %>">
                                            <i class="fas <%= user.isBanned ? 'fa-unlock' : 'fa-ban' %>"
                                                aria-hidden="true"></i>
                                            <%= user.isBanned ? 'Unban User' : 'Ban User' %>
                                        </button>
                                        <button onclick="toggleStaff('<%= user._id %>', this)"
                                            class="action-button <%= user.isStaff ? 'staff-active' : 'staff-inactive' %>"
                                            aria-label="<%= user.isStaff ? 'Remove Staff' : 'Make Staff' %>">
                                            <i class="fas <%= user.isStaff ? 'fa-user-minus' : 'fa-user-plus' %>"
                                                aria-hidden="true"></i>
                                            <%= user.isStaff ? 'Remove Staff' : 'Make Staff' %>
                                        </button>
                                        <button class="copy-btn" onclick="copyKey('<%= user.username %>')"
                                            aria-label="Copy username">
                                            <i class="fas fa-copy" aria-hidden="true"></i> Copy User
                                        </button>
                                        <button class="copy-btn" onclick="copyKey('<%= user.discordId %>')"
                                            aria-label="Copy Discord ID">
                                            <i class="fas fa-copy" aria-hidden="true"></i> Copy ID
                                        </button>
                                    </div>
                                </div>
                                <% }) %>
                                    <% } %>
                </div>
            </div>
            </div>
        </section>

        <!-- Footer -->
        <footer class="footer">
            <div class="footer-content">
                <div class="copyright">© 2023 - <%= new Date().getFullYear() %>
                        <%= config.footer.copyright %>
                </div>
                <div class="version">v<%= version %>
                </div>
            </div>
        </footer>
    </main>

    <!-- Notification Stack -->
    <div class="notification-stack" id="notificationStack"></div>

    <% if (config.analytics.google.enabled) { %>
        <!-- Google Analytics -->
        <script async
            src="https://www.googletagmanager.com/gtag/js?id=<%= config.analytics.google.tracking_id %>"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag() { dataLayer.push(arguments); }
            gtag('js', new Date());
            gtag('config', '<%= config.analytics.google.tracking_id %>');
        </script>
        <% } %>

            <script src="/js/main.js"></script>
            <script>
                // Function to show selected section
                function showSection(sectionId, event) {
                    // Hide all sections
                    document.querySelectorAll('.staff-section').forEach(section => {
                        section.classList.remove('active');
                    });

                    // Remove active class from all nav buttons
                    document.querySelectorAll('.staff-nav-btn').forEach(btn => {
                        btn.classList.remove('active');
                    });

                    // Show selected section
                    document.getElementById(sectionId + '-section').classList.add('active');

                    // Add active class to clicked button
                    if (event && event.currentTarget) {
                        event.currentTarget.classList.add('active');
                    }
                }

                // Functions for staff actions
                async function deleteProduct(productId) {
                    if (confirm('Are you sure you want to delete this product?')) {
                        try {
                            const response = await fetch(`/api/products/${productId}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                createNotification('Product deleted successfully', 'success');
                                setTimeout(() => window.location.reload(), 1000);
                            } else {
                                const data = await response.json();
                                createNotification(data.message || 'Failed to delete product', 'error');
                            }
                        } catch (error) {
                            createNotification('An error occurred', 'error');
                        }
                    }
                }

                async function toggleLicense(licenseId, button) {
                    try {
                        const isActive = button.classList.contains('active');
                        const action = isActive ? 'deactivate' : 'activate';

                        const response = await fetch(`/api/licenses/${licenseId}/${action}`, {
                            method: 'POST'
                        });

                        if (response.ok) {
                            createNotification(`License ${isActive ? 'deactivated' : 'activated'} successfully`, 'success');

                            // Update button state
                            button.classList.toggle('active');
                            button.classList.toggle('inactive');
                            button.innerHTML = `<i class="fas fa-power-off"></i> ${isActive ? 'Activate Key' : 'Deactivate Key'}`;

                            // Update parent card and badge
                            const card = button.closest('.license-card');
                            const badge = card.querySelector('.status-badge');

                            card.classList.toggle('active');
                            card.classList.toggle('inactive');
                            badge.classList.toggle('active');
                            badge.classList.toggle('inactive');
                            badge.textContent = isActive ? 'Inactive' : 'Active';
                        } else {
                            const data = await response.json();
                            createNotification(data.message || 'Failed to update license', 'error');
                        }
                    } catch (error) {
                        createNotification('An error occurred', 'error');
                    }
                }

                async function resetHWID(licenseId) {
                    try {
                        const response = await fetch(`/api/licenses/${licenseId}/reset-hwid`, {
                            method: 'POST'
                        });

                        if (response.ok) {
                            createNotification('HWID reset successfully', 'success');
                            setTimeout(() => window.location.reload(), 1000);
                        } else {
                            const data = await response.json();
                            createNotification(data.message || 'Failed to reset HWID', 'error');
                        }
                    } catch (error) {
                        createNotification('An error occurred', 'error');
                    }
                }

                async function deleteLicense(licenseId) {
                    if (confirm('Are you sure you want to delete this license?')) {
                        try {
                            const response = await fetch(`/api/licenses/${licenseId}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                createNotification('License deleted successfully', 'success');
                                setTimeout(() => window.location.reload(), 1000);
                            } else {
                                const data = await response.json();
                                createNotification(data.message || 'Failed to delete license', 'error');
                            }
                        } catch (error) {
                            createNotification('An error occurred', 'error');
                        }
                    }
                }

                async function toggleBan(userId, button) {
                    try {
                        const isBanned = button.classList.contains('success');
                        const action = isBanned ? 'unban' : 'ban';

                        const response = await fetch(`/api/users/${userId}/${action}`, {
                            method: 'POST'
                        });

                        if (response.ok) {
                            createNotification(`User ${isBanned ? 'unbanned' : 'banned'} successfully`, 'success');

                            // Update button
                            button.classList.toggle('success');
                            button.classList.toggle('danger');
                            button.innerHTML = `<i class="fas ${isBanned ? 'fa-ban' : 'fa-unlock'}"></i> ${isBanned ? 'Ban User' : 'Unban User'}`;

                            // Update status badge
                            const card = button.closest('.user-card');
                            const badge = card.querySelector('.status-badge');

                            badge.classList.toggle('active');
                            badge.classList.toggle('inactive');
                            badge.textContent = isBanned ? 'Active' : 'Banned';
                        } else {
                            const data = await response.json();
                            createNotification(data.message || 'Failed to update user', 'error');
                        }
                    } catch (error) {
                        createNotification('An error occurred', 'error');
                    }
                }

                async function toggleStaff(userId, button) {
                    try {
                        const isStaff = button.classList.contains('staff-active');
                        const action = isStaff ? 'remove-staff' : 'make-staff';

                        const response = await fetch(`/api/users/${userId}/${action}`, {
                            method: 'POST'
                        });

                        if (response.ok) {
                            createNotification(`User ${isStaff ? 'removed from' : 'added to'} staff successfully`, 'success');

                            // Update button
                            button.classList.toggle('staff-active');
                            button.classList.toggle('staff-inactive');
                            button.innerHTML = `<i class="fas ${isStaff ? 'fa-user-plus' : 'fa-user-minus'}"></i> ${isStaff ? 'Make Staff' : 'Remove Staff'}`;

                            // Update staff badge
                            const card = button.closest('.user-card');
                            const badge = card.querySelector('.user-status');

                            badge.classList.toggle('staff');
                            badge.textContent = isStaff ? 'User' : 'Staff';
                        } else {
                            const data = await response.json();
                            createNotification(data.message || 'Failed to update user', 'error');
                        }
                    } catch (error) {
                        createNotification('An error occurred', 'error');
                    }
                }
            </script>
</body>

</html>